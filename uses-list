#!/bin/sh

# Copyright (c) 2002 Free Software Foundation, Inc.
# Written by Mark Wielaard <mark@klomp.org>
# Based on the choose script written by Tom Tromey <tromey@cygnus.com>

# This file is part of Mauve.

# Mauve is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.

# Mauve is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with Mauve; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.

# Given a (list of) test classes or java files generates a list of all java
# files used for that test in the file 'uses_files'.

usage="uses-list [-verbose] output-directory classes_or_files"

if test "$1" = "-verbose"; then
    verbose=yes
    shift
else
    verbose=
fi 

outdir="$1"
shift
test -z "$outdir" && echo "$usage" && exit -1

usesfile=/tmp/uses-file-$$
uses=/tmp/uses-$$

class="$1"
shift
test -z "$class" && echo "$usage" && exit -1

while test ! -z "$class"; do
    test -n "$verbose" && echo "Processing $class"

    # Strip trailing .java or .class if given and replace . with /
    file="`echo $class | sed -e 's/\.java$//' | sed -e 's/\.class$//' | tr . /`"
    file="$file.java"
    dir="`dirname $file`"
    test ! -f "$file" && echo "file $file does not exist" && exit -1

    useslist=" `grep '^// Uses:' $file | sed -e 's,^// Uses:,,'` "

    filelist=$file
    echo "$file" >> "$usesfile"
    for used in $useslist; do
	usedfile=$dir/$used.java
	if test ! -f "$usedfile"; then
	    echo "file $used file used by $file does not exist"
	    exit -1
	fi
	echo "$usedfile" >> "$usesfile"
	filelist="$filelist $usedfile"
    done
    test -n "$verbose" && echo " ... uses: $filelist"

    if test $# -gt 0; then
	class="$1"
	shift
    else
	class=""
    fi
done

# Now uniquify the list of auxiliary files we used.
# I think neither `uniq' nor `sort -u' is portable, so we do it by hand.
previous=
sort "$usesfile" |
while read next; do
    if test "$previous" != "$next"; then
	echo "$next" >> $uses
	previous=$next
    fi
done

if test -f $outdir/uses_files \
    && cmp $uses $outdir/uses_files > /dev/null 2>&1; then
    # Files are the same.
    rm $uses
else
    mv $uses $outdir/uses_files
fi
rm $usesfile
