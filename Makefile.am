## Process this file with automake to produce Makefile.in.

AUTOMAKE_OPTIONS = foreign

JCFLAGS = -g
JC1FLAGS = -g

check_DATA = classes.stamp

## For now we just try to compile every Java file found in srcdir.
## This is specific to GNU make.
harness_files = gnu/testlet/SimpleTestHarness.java \
	gnu/testlet/TestHarness.java gnu/testlet/Testlet.java

classes.stamp: choices
	here=`/bin/pwd`; cd $(srcdir); \
	  CLASSPATH=$$here:`/bin/pwd` $(JAVAC) $(JCFLAGS) -d $$here \
	    $(harness_files) `cat $$here/choices`
	touch classes.stamp

KEYS =
choices: FORCE
	ok=no; \
	if test -f .save-keys && test "`cat .save-keys`" = "$(KEYS)"; then \
	  ok=yes; \
	fi; \
	here=`/bin/pwd`; \
	if test "$$ok" = no; then \
	  echo "$(KEYS)" > .save-keys; \
	  cd $(srcdir) && $(SHELL) choose $$here $(KEYS); \
	fi

FORCE:

if USE_GCJ

## We must run a separate find because otherwise we won't find .class
## files generated by internal classes.  Note that we must force the
## Makefile to be re-read in order to make this magic work.  FIXME.
java_files := $(harness_files) $(shell test -f choices && cat choices)
class_files := $(patsubst %.java,%.class,$(java_files))
javao_files := $(patsubst %.class,%.o,$(class_files))

## BUILT_SOURCES = classes.stamp

check_PROGRAMS = SimpleTestHarness

SimpleTestHarness_SOURCES =
## FIXME: should have way to compile from .java directly to
## .o.  See libjava/Makefile.am.
SimpleTestHarness_DEPENDENCIES = classes.stamp $(javao_files)
SimpleTestHarness_LDADD = $(javao_files)
SimpleTestHarness_LDFLAGS = --main=gnu.testlet.SimpleTestHarness
SimpleTestHarness_LINK = $(GCJ) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@

.class.o:
	CLASSPATH=.:$(srcdir) $(GCJ) -fassume-compiled $(JC1FLAGS) -c -o $@ $<

check-local: $(check_PROGRAMS) choices
	cat classes | ./SimpleTestHarness

recheck:
	test -f .save-keys || : > .save-keys
## Always remove the test program to force a relink.
	@rm -f SimpleTestHarness
	$(MAKE) KEYS="`cat .save-keys`" check

MOSTLYCLEANFILES = $(javao_files)
CLEANFILES = $(class_files) classes.stamp

else  ## USE_GCJ

check-local: classes.stamp
	cat classes | $(JAVA) gnu.testlet.SimpleTestHarness

recheck:
	test -f .save-keys || : > .save-keys
	$(MAKE) KEYS="`cat .save-keys`" check

CLEANFILES = classes.stamp

endif ## USE_GCJ

## For now can't define this conditionally.
SUFFIXES = .class .java
