#!/bin/bash

# Copyright (c) 2002, 2004 Free Software Foundation, Inc.
# Written by Mark Wielaard <mark@klomp.org>

# This file is part of Mauve.

# Mauve is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.

# Mauve is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with Mauve; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.

# Tries to run one test case. Produces a FAIL output if the test crashes
# or doesn't finish after some timeout occurs.
# RUNTIME command can be set in the script to select the VM.
# For testing (gcj) native code set RUNTIME to 'native' it will then try to
# execute the program SimpleTestHarness in the current directory.
# Called from batch_run script.
#
# Usage: runner test_class_name
# Run in the source directory.

if test "x$RUNTIME" = "x" ; then
#RUNTIME="gij"
#RUNTIME="Kissme"
#RUNTIME="/usr/local/sablevm/bin/sablevm -Y"
RUNTIME=/home/topic/current/bin/kaffe
#RUNTIME=jamvm
#RUNTIME="native"
fi

# Number of seconds to wait for the test to finish
WAIT=60

# Whether the test was killed by a timeout
KILLED=0

# Called when timeout occurs
timeout()
{
    kill -9 $PID > /dev/null 2>&1
    KILLED=1
}

# Install timeout
trap timeout SIGALRM
(sleep $WAIT && kill -s SIGALRM $$) > /dev/null 2>&1 &
TIMEOUT=$!

testclass=$1
# Run process
if test "x$RUNTIME" = "xnative"; then
    echo $testclass > testfilename.txt
    ./SimpleTestHarness -debug -verbose -file testfilename.txt &
else
    echo $testclass | $RUNTIME gnu.testlet.SimpleTestHarness -debug -verbose &
fi
PID=$!
wait $PID
result=$?

# cleanup timeout
# FIXME: this kills tests too early:
# trap '' SIGALRM
# if test $KILLED != 1; then
#     kill -9 $TIMEOUT > /dev/null 2>&1
# fi

# Test terminated unexpectedly?
if test $result != 0 -a $result != 1; then
    echo "FAIL: $testclass abnormal termination $result CRASH or TIMEOUT"
fi
